<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>雷庭的博客</title>
  <subtitle>坚持 耐心</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2016-10-17T14:18:28.066Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Lighting</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>npm与bower</title>
    <link href="http://yoursite.com/2016/10/17/test2/"/>
    <id>http://yoursite.com/2016/10/17/test2/</id>
    <published>2016-10-17T14:18:28.062Z</published>
    <updated>2016-10-17T14:18:28.066Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a>
<h1 id="NPM"><a href="#NPM" class="headerlink" title=" NPM"></a> NPM</h1><ul>
<li>node package manager(node的包管理工具)</li>
<li>npm管理包非常方便，我们只需要记住使用哪个包就可以了</li>
<li><p>使用</p>
<ul>
<li>npm install xxx</li>
<li>安装一个包到项目本地，必须要联网</li>
<li>安装完成过后项目根目录下会多一个node_modules文件夹，所有的下载下来的包全部在里面</li>
<li>由于需要记录项目依赖哪些东西，所以需要一个配置文件“package.json”，可以通过npm init命令生成</li>
<li>以后安装包的时候将其–save</li>
<li>–save就是将我们安装的包名字和包版本记录到配置文件中的dependencies节点中</li>
<li>–save-dev</li>
<li>项目依赖分两种，一个就是普通的项目依赖比如bootstrap，还用一种只是开发阶段需要用的，这种属于开发依赖比如gulp，开发依赖最终记录在devDependencies节点里面<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">- npm uninstall xxx --save</div><div class="line">- npm install xxx -g(全局安装包)</div></pre></td></tr></table></figure>
</li>
</ul>
<ul>
<li>如果你安装的是一个工具，工具要在每一个地方都能用，这种情况下一般全局安装。</li>
</ul>
</li>
</ul>
<h1 id="Bower"><a href="#Bower" class="headerlink" title="Bower"></a>Bower</h1><ul>
<li>Web sites are made of lots of things ― frameworks, libraries, assets, and utilities. Bower manages all these things for you.</li>
<li>Bower就是用来管理项目中所有的依赖，主要用于Web页面开发时使用的包管理，比如jquery，bootstrap<blockquote>
<p>重复的轮子太多，抓住轮子与轮子之间的共性</p>
</blockquote>
</li>
</ul>
]]></content>
    
    <summary type="html">
    
      npm基本用法
    
    </summary>
    
      <category term="随笔" scheme="http://yoursite.com/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="笔记" scheme="http://yoursite.com/tags/%E7%AC%94%E8%AE%B0/"/>
    
      <category term="工具" scheme="http://yoursite.com/tags/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>gulp</title>
    <link href="http://yoursite.com/2016/10/17/test-world/"/>
    <id>http://yoursite.com/2016/10/17/test-world/</id>
    <published>2016-10-17T14:16:51.810Z</published>
    <updated>2016-10-17T14:16:51.814Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a>
<h1 id="Gulp"><a href="#Gulp" class="headerlink" title="Gulp"></a>Gulp</h1><h2 id="当下的前端开发"><a href="#当下的前端开发" class="headerlink" title="当下的前端开发"></a>当下的前端开发</h2><ul>
<li>不再是简简单单的使用HTML+CSS+JavaScript这些简单的技术构建网页应用程序了</li>
<li>我们要提高效率，就必须减少重复的工作</li>
<li>使用less之类预处理的CSS coffeescript</li>
<li>提供开发阶段的便利，开发阶段更快捷</li>
<li>现在的开发行业优质的开发人员是不应该将精力放在这些重复性质的工作上</li>
<li>Gulp就是一种可以自动化完成我们开发过程中大量的重复工作<ul>
<li>预处理语言的编译</li>
<li>js css html 压缩混淆</li>
<li>图片体积优化</li>
</ul>
</li>
<li>除gulp之外还有一些类似的自动化工具，比如grunt</li>
<li>what how why</li>
</ul>
<h2 id="Gulp简介"><a href="#Gulp简介" class="headerlink" title="Gulp简介"></a>Gulp简介</h2><ul>
<li>当下最流行的自动化工具<ul>
<li>什么是自动化构建工具？</li>
<li>自动完成一系列重复的操作<ul>
<li>less → css</li>
<li>coffeescript → js</li>
<li>css压缩</li>
<li>js混淆</li>
<li>html压缩</li>
<li>img尺寸优化</li>
<li>。。。。</li>
</ul>
</li>
</ul>
</li>
<li><p>链接：</p>
<ul>
<li><a href="http://gulpjs.com/" target="_blank" rel="external">官网</a></li>
<li><a href="http://www.gulpjs.com.cn/" target="_blank" rel="external">中文网</a></li>
</ul>
</li>
<li><p>gulp的包既包含工具，也包含一些编程的API</p>
</li>
</ul>
<h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><ul>
<li>安装Node.js<ul>
<li>Node.js 给前端带来了一场工业革命</li>
<li><a href="http://npm.taobao.org/" target="_blank" rel="external">http://npm.taobao.org/</a></li>
<li>安装完成过后可以通过命令行工具node -v</li>
<li>安装nodejs过程会自动安装npm(node packages manager)</li>
<li>npm 3 以前的版本文件依赖是层级依赖</li>
<li>npm 3 以后依赖关系改为平行依赖（windows上路径过长问题）</li>
<li>gulp本身是node的模块</li>
</ul>
</li>
<li>安装 gulp 命令行工具<ul>
<li><code>npm install -g gulp</code></li>
<li>-g 指的是在全局作用域中安装</li>
<li>测试命令 gulp -v</li>
</ul>
</li>
<li>初始化 gulp 项目<ul>
<li>在本地安装gulp包</li>
<li>npm install gulp –save</li>
</ul>
</li>
<li>创建任务 - gulpfile.js<ul>
<li>gulpfile.js 就是gulp的主文件</li>
</ul>
</li>
</ul>
<h2 id="基本使用"><a href="#基本使用" class="headerlink" title="基本使用"></a>基本使用</h2><ul>
<li>定义一个任务</li>
<li>复制单个文件</li>
<li>复制多个文件</li>
<li><a href="https://github.com/isaacs/node-glob" target="_blank" rel="external">globs匹配语法</a><ul>
<li>src/*</li>
<li>src/*/*</li>
<li>src/**/*</li>
<li>src/*.jpg</li>
<li>src/*.{jpg,png}</li>
<li>多个globs<ul>
<li>[‘src/*.{jpg,png}’,’a/a.html’]</li>
</ul>
</li>
</ul>
</li>
<li>排除某些文件<ul>
<li>!xxxxx</li>
</ul>
</li>
<li>默认任务<ul>
<li>gulp 中的任务名有个特殊值 default</li>
</ul>
</li>
<li>文件监视自动执行任务</li>
</ul>
<h2 id="常用插件"><a href="#常用插件" class="headerlink" title="常用插件"></a>常用插件</h2><ul>
<li><a href="https://www.npmjs.com/package/gulp-less" target="_blank" rel="external">编译 Less：gulp-less</a></li>
<li><a href="https://www.npmjs.com/package/gulp-jade" target="_blank" rel="external">编译 Jade: gulp-jade</a></li>
<li><a href="https://www.npmjs.com/package/gulp-connect" target="_blank" rel="external">创建本地服务器：gulp-connect</a></li>
<li><a href="https://www.npmjs.com/package/gulp-concat" target="_blank" rel="external">合并文件：gulp-concat</a></li>
<li><a href="https://www.npmjs.com/package/gulp-uglify" target="_blank" rel="external">最小化 js 文件：gulp-uglify</a></li>
<li><a href="https://www.npmjs.com/package/gulp-rename" target="_blank" rel="external">重命名文件：gulp-rename</a></li>
<li><a href="https://www.npmjs.com/package/gulp-minify-css" target="_blank" rel="external">最小化 css 文件：gulp-minify-css</a></li>
<li><a href="https://www.npmjs.com/package/gulp-minify-html" target="_blank" rel="external">压缩html文件 gulp-minify-html</a></li>
<li><a href="https://www.npmjs.com/package/gulp-imagemin" target="_blank" rel="external">最小化图像：gulp-imagemin</a><h2 id="示例模板"><a href="#示例模板" class="headerlink" title="示例模板"></a>示例模板</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 此处代码都是由NODE执行</span></div><div class="line"><span class="comment">// 载入Gulp模块</span></div><div class="line"><span class="keyword">var</span> gulp = <span class="built_in">require</span>(<span class="string">'gulp'</span>);</div><div class="line"><span class="keyword">var</span> less = <span class="built_in">require</span>(<span class="string">'gulp-less'</span>);</div><div class="line"></div><div class="line"><span class="comment">// 注册一个任务</span></div><div class="line">gulp.task(<span class="string">'copy'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">  <span class="comment">// 当gulp执行这个say任务时会自动执行该函数</span></div><div class="line">  <span class="comment">// console.log('hello world');</span></div><div class="line">  <span class="comment">// 合并 压缩之类的操作</span></div><div class="line">  <span class="comment">// 复制文件</span></div><div class="line">  <span class="comment">// gulo.src取一个文件</span></div><div class="line">  gulp.src(<span class="string">'src/index.html'</span>)</div><div class="line">    .pipe(gulp.dest(<span class="string">'dist/'</span>)); <span class="comment">// 将此处需要的操作传递进去</span></div><div class="line">&#125;);</div><div class="line"></div><div class="line"></div><div class="line">gulp.task(<span class="string">'dist'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">  <span class="comment">// src/index.html</span></div><div class="line">  gulp.watch(<span class="string">'src/index.html'</span>, [<span class="string">'copy'</span>]);</div><div class="line">  gulp.watch(<span class="string">'src/styles/*.less'</span>, [<span class="string">'style'</span>]);</div><div class="line">&#125;);</div><div class="line"></div><div class="line"><span class="keyword">var</span> cssnano = <span class="built_in">require</span>(<span class="string">'gulp-cssnano'</span>);</div><div class="line"></div><div class="line">gulp.task(<span class="string">'style'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">  gulp.src(<span class="string">'src/styles/*.less'</span>)</div><div class="line">    .pipe(less()) <span class="comment">// 该环节过后就是CSS</span></div><div class="line">    .pipe(cssnano())</div><div class="line">    .pipe(gulp.dest(<span class="string">'dist/css/'</span>));</div><div class="line">&#125;);</div><div class="line"></div><div class="line"><span class="keyword">var</span> browserSync = <span class="built_in">require</span>(<span class="string">'browser-sync'</span>).create();</div><div class="line"></div><div class="line"><span class="comment">// Static server</span></div><div class="line">gulp.task(<span class="string">'serve'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">    browserSync.init(&#123;</div><div class="line">        <span class="attr">server</span>: &#123;</div><div class="line">            <span class="attr">baseDir</span>: <span class="string">"./"</span></div><div class="line">        &#125;</div><div class="line">    &#125;);</div><div class="line">&#125;);</div></pre></td></tr></table></figure></li>
</ul>
]]></content>
    
    <summary type="html">
    
      gulp基本用法
    
    </summary>
    
      <category term="随笔" scheme="http://yoursite.com/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="笔记" scheme="http://yoursite.com/tags/%E7%AC%94%E8%AE%B0/"/>
    
      <category term="工具" scheme="http://yoursite.com/tags/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
</feed>
